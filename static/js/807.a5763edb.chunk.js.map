{"version":3,"file":"static/js/807.a5763edb.chunk.js","mappings":"qMAQA,MAyFA,EAzFmBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAC7CC,MAAO,GACPC,SAAU,GACVC,eAAgB,KAcZC,EAAiBH,KACjBI,EAAAA,EAAAA,IAAiBJ,KACnBK,EAAAA,GAAMC,MAAM,GAAGN,oJACR,GAKLO,EAAmBA,CAACC,EAAeC,IACnCD,IAAUC,IACZJ,EAAAA,GAAMC,MAAM,iJACL,GAIX,OACEI,EAAAA,EAAAA,MAAA,QACEC,SAAWC,IACTA,EAAEC,iBA7BaC,EAACd,EAAeC,EAAkBC,KACrD,MAAMa,EAAeZ,EAAcH,GAC7BgB,EAAkBT,EAAiBN,EAAUC,GAE9Ca,GAAiBC,IACtBrB,GAASsB,EAAAA,EAAAA,IAAQ,CAAEC,QAAQ,EAAMC,KAAM,CAAEC,KAAMpB,EAAOC,WAAUoB,UAAW,QAC3EC,EAAAA,EAAAA,IAActB,EAAOC,GACrBR,EAAS,KACTY,EAAAA,GAAMkB,QAAQ,GAAGvB,0KAAsC,EAsBnDc,CAAajB,EAAYG,MAAOH,EAAYI,SAAUJ,EAAYK,eAAe,EAEnFsB,UAAU,OAAMC,SAAA,EAEhBf,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,sIACvBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,QACVI,GAAG,QACHC,KAAK,QACLC,YAAY,4EACZC,MAAOlC,EAAYG,MACnBgC,SAAWpB,GAAMd,EAAe,IAAID,EAAaG,MAAOY,EAAEqB,OAAOF,QACjEG,UAAQ,QAGZxB,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,qKAC1BC,EAAAA,EAAAA,KAAA,SACEF,UAAU,QACVI,GAAG,WACHC,KAAK,WACLC,YAAY,kFACZK,UAAW,EACXJ,MAAOlC,EAAYI,SACnB+B,SAAWpB,GAAMd,EAAe,IAAID,EAAaI,SAAUW,EAAEqB,OAAOF,QACpEG,UAAQ,QAGZxB,EAAAA,EAAAA,MAAA,OAAAe,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,iBAAgBF,SAAC,iLAChCC,EAAAA,EAAAA,KAAA,SACEF,UAAU,QACVI,GAAG,iBACHC,KAAK,WACLC,YAAY,8FACZK,UAAW,EACXJ,MAAOlC,EAAYK,eACnB8B,SAAWpB,GAAMd,EAAe,IAAID,EAAaK,eAAgBU,EAAEqB,OAAOF,QAC1EG,UAAQ,QAGZR,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWK,KAAK,SAAQJ,SAAC,kHAG3CC,EAAAA,EAAAA,KAACU,EAAAA,GAAc,CAACC,MAAM,OAAOC,SAAS,iBACjC,C","sources":["components/FormSignup.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { setUser } from \"../store/features/authSlice\";\r\nimport { isUserInUserList, regInUserList } from \"../util/authUtil\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst FormSignup = () => { \r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n    secondPassword: ''\r\n  });\r\n\r\n  const registerUser = (email: string, password: string, secondPassword: string) => {\r\n    const isValidEmail = validateEmail(email);\r\n    const isValidPassword = validatePassword(password, secondPassword);\r\n\r\n    if (!isValidEmail || !isValidPassword) return;\r\n    dispatch(setUser({ isAuth: true, user: { name: email, password, favorites: [] } }));\r\n    regInUserList(email, password);\r\n    navigate('/');\r\n    toast.success(`${email} Вы успешно зарегистрировались`);\r\n  };\r\n\r\n  const validateEmail = (email: string) => {\r\n    if (isUserInUserList(email)) {\r\n      toast.error(`${email} такой емайл уже существует`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const validatePassword = (pass1: string, pass2: string) => {\r\n    if (pass1 !== pass2) {\r\n      toast.error('Введите одинаковые пароли');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  return (\r\n    <form \r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        registerUser(credentials.email, credentials.password, credentials.secondPassword)\r\n      }} \r\n      className=\"form\"\r\n    >\r\n      <div>\r\n        <label htmlFor=\"email\">Необходимо указать Ваш email</label>\r\n        <input \r\n          className=\"input\"\r\n          id=\"email\" \r\n          type=\"email\" \r\n          placeholder=\"Введите логин\" \r\n          value={credentials.email} \r\n          onChange={(e) => setCredentials({...credentials, email: e.target.value})}\r\n          required \r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Необходимо указать Ваш пароль</label>\r\n        <input \r\n          className=\"input\"\r\n          id=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"Введите пароль\" \r\n          minLength={6} \r\n          value={credentials.password} \r\n          onChange={(e) => setCredentials({...credentials, password: e.target.value})} \r\n          required \r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"secondPassword\">Необходимо повторить Ваш пароль</label>\r\n        <input \r\n          className=\"input\"\r\n          id=\"secondPassword\" \r\n          type=\"password\" \r\n          placeholder=\"Повторите пароль\"\r\n          minLength={6}\r\n          value={credentials.secondPassword}\r\n          onChange={(e) => setCredentials({...credentials, secondPassword: e.target.value})}\r\n          required \r\n        />\r\n      </div>\r\n      <button className='form-btn' type=\"submit\">\r\n        Зарегистрироваться \r\n      </button> \r\n      <ToastContainer theme=\"dark\" position=\"top-center\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FormSignup;\r\n"],"names":["FormSignup","navigate","useNavigate","dispatch","useAppDispatch","credentials","setCredentials","useState","email","password","secondPassword","validateEmail","isUserInUserList","toast","error","validatePassword","pass1","pass2","_jsxs","onSubmit","e","preventDefault","registerUser","isValidEmail","isValidPassword","setUser","isAuth","user","name","favorites","regInUserList","success","className","children","_jsx","htmlFor","id","type","placeholder","value","onChange","target","required","minLength","ToastContainer","theme","position"],"sourceRoot":""}