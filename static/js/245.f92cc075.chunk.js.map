{"version":3,"file":"static/js/245.f92cc075.chunk.js","mappings":"qMAQA,MA+DA,EA/DmBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACVC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAC7CC,MAAO,GACPC,SAAU,KAiBZ,OACEC,EAAAA,EAAAA,MAAA,QACEC,SAAWC,IACTA,EAAEC,iBAjBaC,EAACN,EAAeC,KACnC,MAAMM,GAAOC,EAAAA,EAAAA,IAAiBR,GAC1BO,IACFE,EAAAA,EAAAA,IAAUT,EAAOC,GACjBN,GACEe,EAAAA,EAAAA,IAAQ,CAAEC,QAAQ,EAAMJ,KAAM,IAAKA,EAAMN,eAE3CR,EAAS,kBACTmB,EAAAA,GAAMC,QAAQ,GAAGb,mJAEjBY,EAAAA,GAAME,MAAM,GAAGd,oNACjB,EAOIM,CAAaT,EAAYG,MAAOH,EAAYI,SAAS,EAEvDc,UAAU,OAAMC,SAAA,EAEhBd,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOF,SAAC,sIACvBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,QACVI,GAAG,QACHC,KAAK,QACLC,YAAY,4EACZC,MAAOzB,EAAYG,MACnBuB,SAAWnB,GAAMN,EAAe,IAAID,EAAaG,MAAOI,EAAEoB,OAAOF,QACjEG,UAAQ,QAGZvB,EAAAA,EAAAA,MAAA,OAAAc,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,qKAC1BC,EAAAA,EAAAA,KAAA,SACEF,UAAU,QACVI,GAAG,WACHC,KAAK,WACLC,YAAY,kFACZK,UAAW,EACXJ,MAAOzB,EAAYI,SACnBsB,SAAWnB,GAAMN,EAAe,IAAID,EAAaI,SAAUG,EAAEoB,OAAOF,QACpEG,UAAQ,QAGZR,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWK,KAAK,SAAQJ,SAAC,oCAG3CC,EAAAA,EAAAA,KAACU,EAAAA,GAAc,CAACC,MAAM,OAAOC,SAAS,iBACjC,C","sources":["components/FormSignin.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { setUser } from \"../store/features/authSlice\";\r\nimport { isUserInUserList, loginUser } from \"../util/authUtil\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst FormSignin = () => { \r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const authenticate = (email: string, password: string) => {\r\n    const user = isUserInUserList(email);\r\n    if (user) {\r\n      loginUser(email, password);\r\n      dispatch(\r\n        setUser({ isAuth: true, user: { ...user, password } }),\r\n      );\r\n      navigate('/movie-portal/');\r\n      toast.success(`${email} Вы успешно авторизовались`);\r\n    } else {\r\n      toast.error(`${email} такой пользователь не зарегистрирован`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form \r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        authenticate(credentials.email, credentials.password)\r\n      }} \r\n      className=\"form\"\r\n    >\r\n      <div>\r\n        <label htmlFor=\"email\">Необходимо указать Ваш email</label>\r\n        <input \r\n          className=\"input\"\r\n          id=\"email\" \r\n          type=\"email\" \r\n          placeholder=\"Введите логин\" \r\n          value={credentials.email} \r\n          onChange={(e) => setCredentials({...credentials, email: e.target.value})}\r\n          required \r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Необходимо указать Ваш пароль</label>\r\n        <input \r\n          className=\"input\"\r\n          id=\"password\" \r\n          type=\"password\" \r\n          placeholder=\"Введите пароль\" \r\n          minLength={6} \r\n          value={credentials.password} \r\n          onChange={(e) => setCredentials({...credentials, password: e.target.value})} \r\n          required \r\n        />\r\n      </div>\r\n      <button className='form-btn' type=\"submit\">\r\n        Войти \r\n      </button> \r\n      <ToastContainer theme=\"dark\" position=\"top-center\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default FormSignin;"],"names":["FormSignin","navigate","useNavigate","dispatch","useAppDispatch","credentials","setCredentials","useState","email","password","_jsxs","onSubmit","e","preventDefault","authenticate","user","isUserInUserList","loginUser","setUser","isAuth","toast","success","error","className","children","_jsx","htmlFor","id","type","placeholder","value","onChange","target","required","minLength","ToastContainer","theme","position"],"sourceRoot":""}